/* eslint no-control-regex:0  */
'use strict';

var packageData = require('./package.json');

var isEnabled = function isEnabled(value) {
  return !!value && value !== '0' && value !== 'false';
};

var canUseColor = isEnabled(process.env.npm_config_color);
var title = "=== Nodemailer ".concat(packageData.version, " ===");
var text = "\nThank you for using Nodemailer for your email sending needs! While Nodemailer itself is mostly meant to be a SMTP client there are other related projects in the Nodemailer project as well.\n\n> IMAP API ( https://imapapi.com ) is a server application to easily access IMAP accounts via REST API\n> ImapFlow ( https://imapflow.com/ ) is an async IMAP client library for Node.js\n> NodemailerApp ( https://nodemailer.com/app/ ) is a cross platform GUI app to debug emails\n> Project Pending ( https://projectpending.com/ ) allows you to host DNS of your project domains\n> Pending DNS ( https://pendingdns.com/ ) is the DNS server used that powers Project Pending\n> Ethereal Email ( https://ethereal.email/ ) is an email testing service that accepts all your test emails\n";
var footer = "Don't like this message?\nThere's a Github Sponsors goal to remove it\nhttps://github.com/sponsors/andris9\n";
var secs = 4;

var formatCentered = function formatCentered(row, columns) {
  return row.split(/\r?\n/).map(function (row) {
    if (columns <= row.length) {
      return row;
    }

    return ' '.repeat(Math.round(columns / 2 - row.length / 2)) + row;
  }).join('\n');
};

var formatRow = function formatRow(row, columns) {
  if (row.length <= columns) {
    return [row];
  } // wrap!


  var lines = [];

  while (row.length) {
    if (row.length <= columns) {
      lines.push(row);
      break;
    }

    var slice = row.substr(0, columns);
    var prefix = slice.charAt(0) === '>' ? '  ' : '';
    var match = slice.match(/(\s+)[^\s]*$/);

    if (match && match.index) {
      var line = row.substr(0, match.index);
      row = prefix + row.substr(line.length + match[1].length);
      lines.push(line);
    } else {
      lines.push(row);
      break;
    }
  }

  return lines;
};

var wrapText = function wrapText(text) {
  var columns = Number(process.stdout.columns) || 80;
  columns = Math.min(columns, 80) - 1;
  return (formatCentered(title, columns) + '\n' + text).split('\n').flatMap(function (row) {
    return formatRow(row, columns);
  }).join('\n') + '\n' + formatCentered(footer, columns);
};

var banner = wrapText(text).replace(/^/gm, "\x1B[96m").replace(/$/gm, "\x1B[0m").replace(/(https:[^\s)]+)/g, "\x1B[94m $1 \x1B[96m");
console.log(canUseColor ? banner : banner.replace(/\u001B\[\d+m/g, ''));

if (canUseColor) {
  process.stdout.write("\x1B[96m");
}

setInterval(function () {
  process.stdout.write('.');
}, 500);
setTimeout(function () {
  if (canUseColor) {
    process.stdout.write("\x1B[0m\n");
  }

  process.exit(0);
}, secs * 1000 + 100);