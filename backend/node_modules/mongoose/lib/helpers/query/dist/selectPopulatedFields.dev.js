'use strict';

var isExclusive = require('../projection/isExclusive');

var isInclusive = require('../projection/isInclusive');
/*!
 * ignore
 */


module.exports = function selectPopulatedFields(fields, userProvidedFields, populateOptions) {
  if (populateOptions == null) {
    return;
  }

  var paths = Object.keys(populateOptions);
  userProvidedFields = userProvidedFields || {};

  if (isInclusive(fields)) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var path = _step.value;

        if (!isPathInFields(userProvidedFields, path)) {
          fields[path] = 1;
        } else if (userProvidedFields[path] === 0) {
          delete fields[path];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"] != null) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  } else if (isExclusive(fields)) {
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = paths[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _path = _step2.value;

        if (userProvidedFields[_path] == null) {
          delete fields[_path];
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
          _iterator2["return"]();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }
};
/*!
 * ignore
 */


function isPathInFields(userProvidedFields, path) {
  var pieces = path.split('.');
  var len = pieces.length;
  var cur = pieces[0];

  for (var i = 1; i < len; ++i) {
    if (userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null) {
      return true;
    }

    cur += '.' + pieces[i];
  }

  return userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null;
}