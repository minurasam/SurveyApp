'use strict';

var Server = require('mongodb-topology-manager').Server;

var co = require('co');

var mongodb = require('mongodb');

co(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var server, db;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          // Create new instance
          server = new Server('mongod', {
            auth: null,
            dbpath: '/data/db/27017'
          }); // Purge the directory

          _context.next = 3;
          return server.purge();

        case 3:
          _context.next = 5;
          return server.start();

        case 5:
          _context.next = 7;
          return mongodb.MongoClient.connect('mongodb://localhost:27017/admin');

        case 7:
          db = _context.sent;
          _context.next = 10;
          return db.addUser('passwordIsTaco', 'taco', {
            roles: ['dbOwner']
          });

        case 10:
          console.log('done');

        case 11:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}))["catch"](function (error) {
  console.error(error);
  process.exit(-1);
});