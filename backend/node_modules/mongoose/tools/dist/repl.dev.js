'use strict';

var co = require('co');

co(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var ReplSet, topology;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          ReplSet = require('mongodb-topology-manager').ReplSet; // Create new instance

          topology = new ReplSet('mongod', [{
            // mongod process options
            options: {
              bind_ip: 'localhost',
              port: 31000,
              dbpath: "/data/db/31000"
            }
          }, {
            // mongod process options
            options: {
              bind_ip: 'localhost',
              port: 31001,
              dbpath: "/data/db/31001"
            }
          }, {
            // Type of node
            arbiterOnly: true,
            // mongod process options
            options: {
              bind_ip: 'localhost',
              port: 31002,
              dbpath: "/data/db/31002"
            }
          }], {
            replSet: 'rs'
          });
          _context.next = 4;
          return topology.start();

        case 4:
          console.log('done');

        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}))["catch"](function (error) {
  console.error(error);
  process.exit(-1);
});