"use strict"; // Copyright 2020 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.classroom_v1 = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable @typescript-eslint/class-name-casing */

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable @typescript-eslint/no-empty-interface */

/* eslint-disable @typescript-eslint/no-namespace */

/* eslint-disable no-irregular-whitespace */

var googleapis_common_1 = require("googleapis-common");

var classroom_v1;

(function (classroom_v1) {
  /**
   * Google Classroom API
   *
   * Manages classes, rosters, and invitations in Google Classroom.
   *
   * @example
   * ```js
   * const {google} = require('googleapis');
   * const classroom = google.classroom('v1');
   * ```
   */
  var Classroom = function Classroom(options, google) {
    _classCallCheck(this, Classroom);

    this.context = {
      _options: options || {},
      google: google
    };
    this.courses = new Resource$Courses(this.context);
    this.invitations = new Resource$Invitations(this.context);
    this.registrations = new Resource$Registrations(this.context);
    this.userProfiles = new Resource$Userprofiles(this.context);
  };

  classroom_v1.Classroom = Classroom;

  var Resource$Courses =
  /*#__PURE__*/
  function () {
    function Resource$Courses(context) {
      _classCallCheck(this, Resource$Courses);

      this.context = context;
      this.aliases = new Resource$Courses$Aliases(this.context);
      this.announcements = new Resource$Courses$Announcements(this.context);
      this.courseWork = new Resource$Courses$Coursework(this.context);
      this.courseWorkMaterials = new Resource$Courses$Courseworkmaterials(this.context);
      this.students = new Resource$Courses$Students(this.context);
      this.teachers = new Resource$Courses$Teachers(this.context);
      this.topics = new Resource$Courses$Topics(this.context);
    }

    _createClass(Resource$Courses, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses;
  }();

  classroom_v1.Resource$Courses = Resource$Courses;

  var Resource$Courses$Aliases =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Aliases(context) {
      _classCallCheck(this, Resource$Courses$Aliases);

      this.context = context;
    }

    _createClass(Resource$Courses$Aliases, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/aliases/{alias}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'alias'],
          pathParams: ['alias', 'courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Aliases;
  }();

  classroom_v1.Resource$Courses$Aliases = Resource$Courses$Aliases;

  var Resource$Courses$Announcements =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Announcements(context) {
      _classCallCheck(this, Resource$Courses$Announcements);

      this.context = context;
    }

    _createClass(Resource$Courses$Announcements, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "modifyAssignees",
      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}:modifyAssignees').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Announcements;
  }();

  classroom_v1.Resource$Courses$Announcements = Resource$Courses$Announcements;

  var Resource$Courses$Coursework =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Coursework(context) {
      _classCallCheck(this, Resource$Courses$Coursework);

      this.context = context;
      this.studentSubmissions = new Resource$Courses$Coursework$Studentsubmissions(this.context);
    }

    _createClass(Resource$Courses$Coursework, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "modifyAssignees",
      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}:modifyAssignees').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Coursework;
  }();

  classroom_v1.Resource$Courses$Coursework = Resource$Courses$Coursework;

  var Resource$Courses$Coursework$Studentsubmissions =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Coursework$Studentsubmissions(context) {
      _classCallCheck(this, Resource$Courses$Coursework$Studentsubmissions);

      this.context = context;
    }

    _createClass(Resource$Courses$Coursework$Studentsubmissions, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId'],
          pathParams: ['courseId', 'courseWorkId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "modifyAttachments",
      value: function modifyAttachments(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "reclaim",
      value: function reclaim(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "return",
      value: function _return(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "turnIn",
      value: function turnIn(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId', 'courseWorkId', 'id'],
          pathParams: ['courseId', 'courseWorkId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Coursework$Studentsubmissions;
  }();

  classroom_v1.Resource$Courses$Coursework$Studentsubmissions = Resource$Courses$Coursework$Studentsubmissions;

  var Resource$Courses$Courseworkmaterials =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Courseworkmaterials(context) {
      _classCallCheck(this, Resource$Courses$Courseworkmaterials);

      this.context = context;
    }

    _createClass(Resource$Courses$Courseworkmaterials, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWorkMaterials').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWorkMaterials/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWorkMaterials/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWorkMaterials').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/courseWorkMaterials/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Courseworkmaterials;
  }();

  classroom_v1.Resource$Courses$Courseworkmaterials = Resource$Courses$Courseworkmaterials;

  var Resource$Courses$Students =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Students(context) {
      _classCallCheck(this, Resource$Courses$Students);

      this.context = context;
    }

    _createClass(Resource$Courses$Students, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'userId'],
          pathParams: ['courseId', 'userId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'userId'],
          pathParams: ['courseId', 'userId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Students;
  }();

  classroom_v1.Resource$Courses$Students = Resource$Courses$Students;

  var Resource$Courses$Teachers =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Teachers(context) {
      _classCallCheck(this, Resource$Courses$Teachers);

      this.context = context;
    }

    _createClass(Resource$Courses$Teachers, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'userId'],
          pathParams: ['courseId', 'userId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'userId'],
          pathParams: ['courseId', 'userId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Teachers;
  }();

  classroom_v1.Resource$Courses$Teachers = Resource$Courses$Teachers;

  var Resource$Courses$Topics =
  /*#__PURE__*/
  function () {
    function Resource$Courses$Topics(context) {
      _classCallCheck(this, Resource$Courses$Topics);

      this.context = context;
    }

    _createClass(Resource$Courses$Topics, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/topics').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/topics').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['courseId'],
          pathParams: ['courseId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/courses/{courseId}/topics/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['courseId', 'id'],
          pathParams: ['courseId', 'id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Courses$Topics;
  }();

  classroom_v1.Resource$Courses$Topics = Resource$Courses$Topics;

  var Resource$Invitations =
  /*#__PURE__*/
  function () {
    function Resource$Invitations(context) {
      _classCallCheck(this, Resource$Invitations);

      this.context = context;
    }

    _createClass(Resource$Invitations, [{
      key: "accept",
      value: function accept(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/invitations/{id}:accept').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/invitations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['id'],
          pathParams: ['id'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/invitations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Invitations;
  }();

  classroom_v1.Resource$Invitations = Resource$Invitations;

  var Resource$Registrations =
  /*#__PURE__*/
  function () {
    function Resource$Registrations(context) {
      _classCallCheck(this, Resource$Registrations);

      this.context = context;
    }

    _createClass(Resource$Registrations, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/registrations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/registrations/{registrationId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['registrationId'],
          pathParams: ['registrationId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Registrations;
  }();

  classroom_v1.Resource$Registrations = Resource$Registrations;

  var Resource$Userprofiles =
  /*#__PURE__*/
  function () {
    function Resource$Userprofiles(context) {
      _classCallCheck(this, Resource$Userprofiles);

      this.context = context;
      this.guardianInvitations = new Resource$Userprofiles$Guardianinvitations(this.context);
      this.guardians = new Resource$Userprofiles$Guardians(this.context);
    }

    _createClass(Resource$Userprofiles, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{userId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['userId'],
          pathParams: ['userId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userprofiles;
  }();

  classroom_v1.Resource$Userprofiles = Resource$Userprofiles;

  var Resource$Userprofiles$Guardianinvitations =
  /*#__PURE__*/
  function () {
    function Resource$Userprofiles$Guardianinvitations(context) {
      _classCallCheck(this, Resource$Userprofiles$Guardianinvitations);

      this.context = context;
    }

    _createClass(Resource$Userprofiles$Guardianinvitations, [{
      key: "create",
      value: function create(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['studentId'],
          pathParams: ['studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['studentId', 'invitationId'],
          pathParams: ['invitationId', 'studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['studentId'],
          pathParams: ['studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['studentId', 'invitationId'],
          pathParams: ['invitationId', 'studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userprofiles$Guardianinvitations;
  }();

  classroom_v1.Resource$Userprofiles$Guardianinvitations = Resource$Userprofiles$Guardianinvitations;

  var Resource$Userprofiles$Guardians =
  /*#__PURE__*/
  function () {
    function Resource$Userprofiles$Guardians(context) {
      _classCallCheck(this, Resource$Userprofiles$Guardians);

      this.context = context;
    }

    _createClass(Resource$Userprofiles$Guardians, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['studentId', 'guardianId'],
          pathParams: ['guardianId', 'studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['studentId', 'guardianId'],
          pathParams: ['guardianId', 'studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['studentId'],
          pathParams: ['studentId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userprofiles$Guardians;
  }();

  classroom_v1.Resource$Userprofiles$Guardians = Resource$Userprofiles$Guardians;
})(classroom_v1 = exports.classroom_v1 || (exports.classroom_v1 = {}));