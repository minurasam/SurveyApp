"use strict"; // Copyright 2020 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dfareporting_v3_4 = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable @typescript-eslint/class-name-casing */

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable @typescript-eslint/no-empty-interface */

/* eslint-disable @typescript-eslint/no-namespace */

/* eslint-disable no-irregular-whitespace */

var googleapis_common_1 = require("googleapis-common");

var dfareporting_v3_4;

(function (dfareporting_v3_4) {
  /**
   * Campaign Manager 360 API
   *
   * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
   *
   * @example
   * ```js
   * const {google} = require('googleapis');
   * const dfareporting = google.dfareporting('v3.4');
   * ```
   */
  var Dfareporting = function Dfareporting(options, google) {
    _classCallCheck(this, Dfareporting);

    this.context = {
      _options: options || {},
      google: google
    };
    this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);
    this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);
    this.accountPermissions = new Resource$Accountpermissions(this.context);
    this.accounts = new Resource$Accounts(this.context);
    this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);
    this.ads = new Resource$Ads(this.context);
    this.advertiserGroups = new Resource$Advertisergroups(this.context);
    this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);
    this.advertisers = new Resource$Advertisers(this.context);
    this.browsers = new Resource$Browsers(this.context);
    this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);
    this.campaigns = new Resource$Campaigns(this.context);
    this.changeLogs = new Resource$Changelogs(this.context);
    this.cities = new Resource$Cities(this.context);
    this.connectionTypes = new Resource$Connectiontypes(this.context);
    this.contentCategories = new Resource$Contentcategories(this.context);
    this.conversions = new Resource$Conversions(this.context);
    this.countries = new Resource$Countries(this.context);
    this.creativeAssets = new Resource$Creativeassets(this.context);
    this.creativeFields = new Resource$Creativefields(this.context);
    this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);
    this.creativeGroups = new Resource$Creativegroups(this.context);
    this.creatives = new Resource$Creatives(this.context);
    this.customEvents = new Resource$Customevents(this.context);
    this.dimensionValues = new Resource$Dimensionvalues(this.context);
    this.directorySites = new Resource$Directorysites(this.context);
    this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);
    this.eventTags = new Resource$Eventtags(this.context);
    this.files = new Resource$Files(this.context);
    this.floodlightActivities = new Resource$Floodlightactivities(this.context);
    this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);
    this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);
    this.inventoryItems = new Resource$Inventoryitems(this.context);
    this.languages = new Resource$Languages(this.context);
    this.metros = new Resource$Metros(this.context);
    this.mobileApps = new Resource$Mobileapps(this.context);
    this.mobileCarriers = new Resource$Mobilecarriers(this.context);
    this.operatingSystems = new Resource$Operatingsystems(this.context);
    this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);
    this.orderDocuments = new Resource$Orderdocuments(this.context);
    this.orders = new Resource$Orders(this.context);
    this.placementGroups = new Resource$Placementgroups(this.context);
    this.placements = new Resource$Placements(this.context);
    this.placementStrategies = new Resource$Placementstrategies(this.context);
    this.platformTypes = new Resource$Platformtypes(this.context);
    this.postalCodes = new Resource$Postalcodes(this.context);
    this.projects = new Resource$Projects(this.context);
    this.regions = new Resource$Regions(this.context);
    this.remarketingLists = new Resource$Remarketinglists(this.context);
    this.remarketingListShares = new Resource$Remarketinglistshares(this.context);
    this.reports = new Resource$Reports(this.context);
    this.sites = new Resource$Sites(this.context);
    this.sizes = new Resource$Sizes(this.context);
    this.subaccounts = new Resource$Subaccounts(this.context);
    this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);
    this.targetingTemplates = new Resource$Targetingtemplates(this.context);
    this.userProfiles = new Resource$Userprofiles(this.context);
    this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);
    this.userRolePermissions = new Resource$Userrolepermissions(this.context);
    this.userRoles = new Resource$Userroles(this.context);
    this.videoFormats = new Resource$Videoformats(this.context);
  };

  dfareporting_v3_4.Dfareporting = Dfareporting;

  var Resource$Accountactiveadsummaries =
  /*#__PURE__*/
  function () {
    function Resource$Accountactiveadsummaries(context) {
      _classCallCheck(this, Resource$Accountactiveadsummaries);

      this.context = context;
    }

    _createClass(Resource$Accountactiveadsummaries, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'summaryAccountId'],
          pathParams: ['profileId', 'summaryAccountId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Accountactiveadsummaries;
  }();

  dfareporting_v3_4.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;

  var Resource$Accountpermissiongroups =
  /*#__PURE__*/
  function () {
    function Resource$Accountpermissiongroups(context) {
      _classCallCheck(this, Resource$Accountpermissiongroups);

      this.context = context;
    }

    _createClass(Resource$Accountpermissiongroups, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Accountpermissiongroups;
  }();

  dfareporting_v3_4.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;

  var Resource$Accountpermissions =
  /*#__PURE__*/
  function () {
    function Resource$Accountpermissions(context) {
      _classCallCheck(this, Resource$Accountpermissions);

      this.context = context;
    }

    _createClass(Resource$Accountpermissions, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountPermissions').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Accountpermissions;
  }();

  dfareporting_v3_4.Resource$Accountpermissions = Resource$Accountpermissions;

  var Resource$Accounts =
  /*#__PURE__*/
  function () {
    function Resource$Accounts(context) {
      _classCallCheck(this, Resource$Accounts);

      this.context = context;
    }

    _createClass(Resource$Accounts, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Accounts;
  }();

  dfareporting_v3_4.Resource$Accounts = Resource$Accounts;

  var Resource$Accountuserprofiles =
  /*#__PURE__*/
  function () {
    function Resource$Accountuserprofiles(context) {
      _classCallCheck(this, Resource$Accountuserprofiles);

      this.context = context;
    }

    _createClass(Resource$Accountuserprofiles, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Accountuserprofiles;
  }();

  dfareporting_v3_4.Resource$Accountuserprofiles = Resource$Accountuserprofiles;

  var Resource$Ads =
  /*#__PURE__*/
  function () {
    function Resource$Ads(context) {
      _classCallCheck(this, Resource$Ads);

      this.context = context;
    }

    _createClass(Resource$Ads, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/ads').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Ads;
  }();

  dfareporting_v3_4.Resource$Ads = Resource$Ads;

  var Resource$Advertisergroups =
  /*#__PURE__*/
  function () {
    function Resource$Advertisergroups(context) {
      _classCallCheck(this, Resource$Advertisergroups);

      this.context = context;
    }

    _createClass(Resource$Advertisergroups, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Advertisergroups;
  }();

  dfareporting_v3_4.Resource$Advertisergroups = Resource$Advertisergroups;

  var Resource$Advertiserlandingpages =
  /*#__PURE__*/
  function () {
    function Resource$Advertiserlandingpages(context) {
      _classCallCheck(this, Resource$Advertiserlandingpages);

      this.context = context;
    }

    _createClass(Resource$Advertiserlandingpages, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Advertiserlandingpages;
  }();

  dfareporting_v3_4.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;

  var Resource$Advertisers =
  /*#__PURE__*/
  function () {
    function Resource$Advertisers(context) {
      _classCallCheck(this, Resource$Advertisers);

      this.context = context;
    }

    _createClass(Resource$Advertisers, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/advertisers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Advertisers;
  }();

  dfareporting_v3_4.Resource$Advertisers = Resource$Advertisers;

  var Resource$Browsers =
  /*#__PURE__*/
  function () {
    function Resource$Browsers(context) {
      _classCallCheck(this, Resource$Browsers);

      this.context = context;
    }

    _createClass(Resource$Browsers, [{
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/browsers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Browsers;
  }();

  dfareporting_v3_4.Resource$Browsers = Resource$Browsers;

  var Resource$Campaigncreativeassociations =
  /*#__PURE__*/
  function () {
    function Resource$Campaigncreativeassociations(context) {
      _classCallCheck(this, Resource$Campaigncreativeassociations);

      this.context = context;
    }

    _createClass(Resource$Campaigncreativeassociations, [{
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId', 'campaignId'],
          pathParams: ['campaignId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'campaignId'],
          pathParams: ['campaignId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Campaigncreativeassociations;
  }();

  dfareporting_v3_4.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;

  var Resource$Campaigns =
  /*#__PURE__*/
  function () {
    function Resource$Campaigns(context) {
      _classCallCheck(this, Resource$Campaigns);

      this.context = context;
    }

    _createClass(Resource$Campaigns, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/campaigns').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Campaigns;
  }();

  dfareporting_v3_4.Resource$Campaigns = Resource$Campaigns;

  var Resource$Changelogs =
  /*#__PURE__*/
  function () {
    function Resource$Changelogs(context) {
      _classCallCheck(this, Resource$Changelogs);

      this.context = context;
    }

    _createClass(Resource$Changelogs, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/changeLogs').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Changelogs;
  }();

  dfareporting_v3_4.Resource$Changelogs = Resource$Changelogs;

  var Resource$Cities =
  /*#__PURE__*/
  function () {
    function Resource$Cities(context) {
      _classCallCheck(this, Resource$Cities);

      this.context = context;
    }

    _createClass(Resource$Cities, [{
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/cities').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Cities;
  }();

  dfareporting_v3_4.Resource$Cities = Resource$Cities;

  var Resource$Connectiontypes =
  /*#__PURE__*/
  function () {
    function Resource$Connectiontypes(context) {
      _classCallCheck(this, Resource$Connectiontypes);

      this.context = context;
    }

    _createClass(Resource$Connectiontypes, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/connectionTypes').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Connectiontypes;
  }();

  dfareporting_v3_4.Resource$Connectiontypes = Resource$Connectiontypes;

  var Resource$Contentcategories =
  /*#__PURE__*/
  function () {
    function Resource$Contentcategories(context) {
      _classCallCheck(this, Resource$Contentcategories);

      this.context = context;
    }

    _createClass(Resource$Contentcategories, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/contentCategories').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Contentcategories;
  }();

  dfareporting_v3_4.Resource$Contentcategories = Resource$Contentcategories;

  var Resource$Conversions =
  /*#__PURE__*/
  function () {
    function Resource$Conversions(context) {
      _classCallCheck(this, Resource$Conversions);

      this.context = context;
    }

    _createClass(Resource$Conversions, [{
      key: "batchinsert",
      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "batchupdate",
      value: function batchupdate(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Conversions;
  }();

  dfareporting_v3_4.Resource$Conversions = Resource$Conversions;

  var Resource$Countries =
  /*#__PURE__*/
  function () {
    function Resource$Countries(context) {
      _classCallCheck(this, Resource$Countries);

      this.context = context;
    }

    _createClass(Resource$Countries, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'dartId'],
          pathParams: ['dartId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/countries').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Countries;
  }();

  dfareporting_v3_4.Resource$Countries = Resource$Countries;

  var Resource$Creativeassets =
  /*#__PURE__*/
  function () {
    function Resource$Creativeassets(context) {
      _classCallCheck(this, Resource$Creativeassets);

      this.context = context;
    }

    _createClass(Resource$Creativeassets, [{
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          mediaUrl: (rootUrl + '/upload/dfareporting/v3.4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\/)\/+/g, '$1'),
          requiredParams: ['profileId', 'advertiserId'],
          pathParams: ['advertiserId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Creativeassets;
  }();

  dfareporting_v3_4.Resource$Creativeassets = Resource$Creativeassets;

  var Resource$Creativefields =
  /*#__PURE__*/
  function () {
    function Resource$Creativefields(context) {
      _classCallCheck(this, Resource$Creativefields);

      this.context = context;
    }

    _createClass(Resource$Creativefields, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Creativefields;
  }();

  dfareporting_v3_4.Resource$Creativefields = Resource$Creativefields;

  var Resource$Creativefieldvalues =
  /*#__PURE__*/
  function () {
    function Resource$Creativefieldvalues(context) {
      _classCallCheck(this, Resource$Creativefieldvalues);

      this.context = context;
    }

    _createClass(Resource$Creativefieldvalues, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId', 'id'],
          pathParams: ['creativeFieldId', 'id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId', 'id'],
          pathParams: ['creativeFieldId', 'id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId'],
          pathParams: ['creativeFieldId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId'],
          pathParams: ['creativeFieldId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId', 'id'],
          pathParams: ['creativeFieldId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId', 'creativeFieldId'],
          pathParams: ['creativeFieldId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Creativefieldvalues;
  }();

  dfareporting_v3_4.Resource$Creativefieldvalues = Resource$Creativefieldvalues;

  var Resource$Creativegroups =
  /*#__PURE__*/
  function () {
    function Resource$Creativegroups(context) {
      _classCallCheck(this, Resource$Creativegroups);

      this.context = context;
    }

    _createClass(Resource$Creativegroups, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Creativegroups;
  }();

  dfareporting_v3_4.Resource$Creativegroups = Resource$Creativegroups;

  var Resource$Creatives =
  /*#__PURE__*/
  function () {
    function Resource$Creatives(context) {
      _classCallCheck(this, Resource$Creatives);

      this.context = context;
    }

    _createClass(Resource$Creatives, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/creatives').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Creatives;
  }();

  dfareporting_v3_4.Resource$Creatives = Resource$Creatives;

  var Resource$Customevents =
  /*#__PURE__*/
  function () {
    function Resource$Customevents(context) {
      _classCallCheck(this, Resource$Customevents);

      this.context = context;
    }

    _createClass(Resource$Customevents, [{
      key: "batchinsert",
      value: function batchinsert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/customEvents/batchinsert').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Customevents;
  }();

  dfareporting_v3_4.Resource$Customevents = Resource$Customevents;

  var Resource$Dimensionvalues =
  /*#__PURE__*/
  function () {
    function Resource$Dimensionvalues(context) {
      _classCallCheck(this, Resource$Dimensionvalues);

      this.context = context;
    }

    _createClass(Resource$Dimensionvalues, [{
      key: "query",
      value: function query(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Dimensionvalues;
  }();

  dfareporting_v3_4.Resource$Dimensionvalues = Resource$Dimensionvalues;

  var Resource$Directorysites =
  /*#__PURE__*/
  function () {
    function Resource$Directorysites(context) {
      _classCallCheck(this, Resource$Directorysites);

      this.context = context;
    }

    _createClass(Resource$Directorysites, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/directorySites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Directorysites;
  }();

  dfareporting_v3_4.Resource$Directorysites = Resource$Directorysites;

  var Resource$Dynamictargetingkeys =
  /*#__PURE__*/
  function () {
    function Resource$Dynamictargetingkeys(context) {
      _classCallCheck(this, Resource$Dynamictargetingkeys);

      this.context = context;
    }

    _createClass(Resource$Dynamictargetingkeys, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'objectId', 'name', 'objectType'],
          pathParams: ['objectId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Dynamictargetingkeys;
  }();

  dfareporting_v3_4.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;

  var Resource$Eventtags =
  /*#__PURE__*/
  function () {
    function Resource$Eventtags(context) {
      _classCallCheck(this, Resource$Eventtags);

      this.context = context;
    }

    _createClass(Resource$Eventtags, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/eventTags').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Eventtags;
  }();

  dfareporting_v3_4.Resource$Eventtags = Resource$Eventtags;

  var Resource$Files =
  /*#__PURE__*/
  function () {
    function Resource$Files(context) {
      _classCallCheck(this, Resource$Files);

      this.context = context;
    }

    _createClass(Resource$Files, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/reports/{reportId}/files/{fileId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['reportId', 'fileId'],
          pathParams: ['fileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/files').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Files;
  }();

  dfareporting_v3_4.Resource$Files = Resource$Files;

  var Resource$Floodlightactivities =
  /*#__PURE__*/
  function () {
    function Resource$Floodlightactivities(context) {
      _classCallCheck(this, Resource$Floodlightactivities);

      this.context = context;
    }

    _createClass(Resource$Floodlightactivities, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "generatetag",
      value: function generatetag(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Floodlightactivities;
  }();

  dfareporting_v3_4.Resource$Floodlightactivities = Resource$Floodlightactivities;

  var Resource$Floodlightactivitygroups =
  /*#__PURE__*/
  function () {
    function Resource$Floodlightactivitygroups(context) {
      _classCallCheck(this, Resource$Floodlightactivitygroups);

      this.context = context;
    }

    _createClass(Resource$Floodlightactivitygroups, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Floodlightactivitygroups;
  }();

  dfareporting_v3_4.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;

  var Resource$Floodlightconfigurations =
  /*#__PURE__*/
  function () {
    function Resource$Floodlightconfigurations(context) {
      _classCallCheck(this, Resource$Floodlightconfigurations);

      this.context = context;
    }

    _createClass(Resource$Floodlightconfigurations, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Floodlightconfigurations;
  }();

  dfareporting_v3_4.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;

  var Resource$Inventoryitems =
  /*#__PURE__*/
  function () {
    function Resource$Inventoryitems(context) {
      _classCallCheck(this, Resource$Inventoryitems);

      this.context = context;
    }

    _createClass(Resource$Inventoryitems, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId', 'id'],
          pathParams: ['id', 'profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId'],
          pathParams: ['profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Inventoryitems;
  }();

  dfareporting_v3_4.Resource$Inventoryitems = Resource$Inventoryitems;

  var Resource$Languages =
  /*#__PURE__*/
  function () {
    function Resource$Languages(context) {
      _classCallCheck(this, Resource$Languages);

      this.context = context;
    }

    _createClass(Resource$Languages, [{
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/languages').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Languages;
  }();

  dfareporting_v3_4.Resource$Languages = Resource$Languages;

  var Resource$Metros =
  /*#__PURE__*/
  function () {
    function Resource$Metros(context) {
      _classCallCheck(this, Resource$Metros);

      this.context = context;
    }

    _createClass(Resource$Metros, [{
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/metros').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Metros;
  }();

  dfareporting_v3_4.Resource$Metros = Resource$Metros;

  var Resource$Mobileapps =
  /*#__PURE__*/
  function () {
    function Resource$Mobileapps(context) {
      _classCallCheck(this, Resource$Mobileapps);

      this.context = context;
    }

    _createClass(Resource$Mobileapps, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileApps').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Mobileapps;
  }();

  dfareporting_v3_4.Resource$Mobileapps = Resource$Mobileapps;

  var Resource$Mobilecarriers =
  /*#__PURE__*/
  function () {
    function Resource$Mobilecarriers(context) {
      _classCallCheck(this, Resource$Mobilecarriers);

      this.context = context;
    }

    _createClass(Resource$Mobilecarriers, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Mobilecarriers;
  }();

  dfareporting_v3_4.Resource$Mobilecarriers = Resource$Mobilecarriers;

  var Resource$Operatingsystems =
  /*#__PURE__*/
  function () {
    function Resource$Operatingsystems(context) {
      _classCallCheck(this, Resource$Operatingsystems);

      this.context = context;
    }

    _createClass(Resource$Operatingsystems, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'dartId'],
          pathParams: ['dartId', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystems').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Operatingsystems;
  }();

  dfareporting_v3_4.Resource$Operatingsystems = Resource$Operatingsystems;

  var Resource$Operatingsystemversions =
  /*#__PURE__*/
  function () {
    function Resource$Operatingsystemversions(context) {
      _classCallCheck(this, Resource$Operatingsystemversions);

      this.context = context;
    }

    _createClass(Resource$Operatingsystemversions, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Operatingsystemversions;
  }();

  dfareporting_v3_4.Resource$Operatingsystemversions = Resource$Operatingsystemversions;

  var Resource$Orderdocuments =
  /*#__PURE__*/
  function () {
    function Resource$Orderdocuments(context) {
      _classCallCheck(this, Resource$Orderdocuments);

      this.context = context;
    }

    _createClass(Resource$Orderdocuments, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId', 'id'],
          pathParams: ['id', 'profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId'],
          pathParams: ['profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Orderdocuments;
  }();

  dfareporting_v3_4.Resource$Orderdocuments = Resource$Orderdocuments;

  var Resource$Orders =
  /*#__PURE__*/
  function () {
    function Resource$Orders(context) {
      _classCallCheck(this, Resource$Orders);

      this.context = context;
    }

    _createClass(Resource$Orders, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId', 'id'],
          pathParams: ['id', 'profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'projectId'],
          pathParams: ['profileId', 'projectId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Orders;
  }();

  dfareporting_v3_4.Resource$Orders = Resource$Orders;

  var Resource$Placementgroups =
  /*#__PURE__*/
  function () {
    function Resource$Placementgroups(context) {
      _classCallCheck(this, Resource$Placementgroups);

      this.context = context;
    }

    _createClass(Resource$Placementgroups, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Placementgroups;
  }();

  dfareporting_v3_4.Resource$Placementgroups = Resource$Placementgroups;

  var Resource$Placements =
  /*#__PURE__*/
  function () {
    function Resource$Placements(context) {
      _classCallCheck(this, Resource$Placements);

      this.context = context;
    }

    _createClass(Resource$Placements, [{
      key: "generatetags",
      value: function generatetags(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placements').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Placements;
  }();

  dfareporting_v3_4.Resource$Placements = Resource$Placements;

  var Resource$Placementstrategies =
  /*#__PURE__*/
  function () {
    function Resource$Placementstrategies(context) {
      _classCallCheck(this, Resource$Placementstrategies);

      this.context = context;
    }

    _createClass(Resource$Placementstrategies, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Placementstrategies;
  }();

  dfareporting_v3_4.Resource$Placementstrategies = Resource$Placementstrategies;

  var Resource$Platformtypes =
  /*#__PURE__*/
  function () {
    function Resource$Platformtypes(context) {
      _classCallCheck(this, Resource$Platformtypes);

      this.context = context;
    }

    _createClass(Resource$Platformtypes, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/platformTypes').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Platformtypes;
  }();

  dfareporting_v3_4.Resource$Platformtypes = Resource$Platformtypes;

  var Resource$Postalcodes =
  /*#__PURE__*/
  function () {
    function Resource$Postalcodes(context) {
      _classCallCheck(this, Resource$Postalcodes);

      this.context = context;
    }

    _createClass(Resource$Postalcodes, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'code'],
          pathParams: ['code', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/postalCodes').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Postalcodes;
  }();

  dfareporting_v3_4.Resource$Postalcodes = Resource$Postalcodes;

  var Resource$Projects =
  /*#__PURE__*/
  function () {
    function Resource$Projects(context) {
      _classCallCheck(this, Resource$Projects);

      this.context = context;
    }

    _createClass(Resource$Projects, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/projects').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Projects;
  }();

  dfareporting_v3_4.Resource$Projects = Resource$Projects;

  var Resource$Regions =
  /*#__PURE__*/
  function () {
    function Resource$Regions(context) {
      _classCallCheck(this, Resource$Regions);

      this.context = context;
    }

    _createClass(Resource$Regions, [{
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/regions').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Regions;
  }();

  dfareporting_v3_4.Resource$Regions = Resource$Regions;

  var Resource$Remarketinglists =
  /*#__PURE__*/
  function () {
    function Resource$Remarketinglists(context) {
      _classCallCheck(this, Resource$Remarketinglists);

      this.context = context;
    }

    _createClass(Resource$Remarketinglists, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'advertiserId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Remarketinglists;
  }();

  dfareporting_v3_4.Resource$Remarketinglists = Resource$Remarketinglists;

  var Resource$Remarketinglistshares =
  /*#__PURE__*/
  function () {
    function Resource$Remarketinglistshares(context) {
      _classCallCheck(this, Resource$Remarketinglistshares);

      this.context = context;
    }

    _createClass(Resource$Remarketinglistshares, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'remarketingListId'],
          pathParams: ['profileId', 'remarketingListId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Remarketinglistshares;
  }();

  dfareporting_v3_4.Resource$Remarketinglistshares = Resource$Remarketinglistshares;

  var Resource$Reports =
  /*#__PURE__*/
  function () {
    function Resource$Reports(context) {
      _classCallCheck(this, Resource$Reports);

      this.context = context;
      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);
      this.files = new Resource$Reports$Files(this.context);
    }

    _createClass(Resource$Reports, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "run",
      value: function run(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Reports;
  }();

  dfareporting_v3_4.Resource$Reports = Resource$Reports;

  var Resource$Reports$Compatiblefields =
  /*#__PURE__*/
  function () {
    function Resource$Reports$Compatiblefields(context) {
      _classCallCheck(this, Resource$Reports$Compatiblefields);

      this.context = context;
    }

    _createClass(Resource$Reports$Compatiblefields, [{
      key: "query",
      value: function query(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Reports$Compatiblefields;
  }();

  dfareporting_v3_4.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;

  var Resource$Reports$Files =
  /*#__PURE__*/
  function () {
    function Resource$Reports$Files(context) {
      _classCallCheck(this, Resource$Reports$Files);

      this.context = context;
    }

    _createClass(Resource$Reports$Files, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId', 'fileId'],
          pathParams: ['fileId', 'profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'reportId'],
          pathParams: ['profileId', 'reportId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Reports$Files;
  }();

  dfareporting_v3_4.Resource$Reports$Files = Resource$Reports$Files;

  var Resource$Sites =
  /*#__PURE__*/
  function () {
    function Resource$Sites(context) {
      _classCallCheck(this, Resource$Sites);

      this.context = context;
    }

    _createClass(Resource$Sites, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sites').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Sites;
  }();

  dfareporting_v3_4.Resource$Sites = Resource$Sites;

  var Resource$Sizes =
  /*#__PURE__*/
  function () {
    function Resource$Sizes(context) {
      _classCallCheck(this, Resource$Sizes);

      this.context = context;
    }

    _createClass(Resource$Sizes, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/sizes').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Sizes;
  }();

  dfareporting_v3_4.Resource$Sizes = Resource$Sizes;

  var Resource$Subaccounts =
  /*#__PURE__*/
  function () {
    function Resource$Subaccounts(context) {
      _classCallCheck(this, Resource$Subaccounts);

      this.context = context;
    }

    _createClass(Resource$Subaccounts, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/subaccounts').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Subaccounts;
  }();

  dfareporting_v3_4.Resource$Subaccounts = Resource$Subaccounts;

  var Resource$Targetableremarketinglists =
  /*#__PURE__*/
  function () {
    function Resource$Targetableremarketinglists(context) {
      _classCallCheck(this, Resource$Targetableremarketinglists);

      this.context = context;
    }

    _createClass(Resource$Targetableremarketinglists, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'advertiserId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Targetableremarketinglists;
  }();

  dfareporting_v3_4.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;

  var Resource$Targetingtemplates =
  /*#__PURE__*/
  function () {
    function Resource$Targetingtemplates(context) {
      _classCallCheck(this, Resource$Targetingtemplates);

      this.context = context;
    }

    _createClass(Resource$Targetingtemplates, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Targetingtemplates;
  }();

  dfareporting_v3_4.Resource$Targetingtemplates = Resource$Targetingtemplates;

  var Resource$Userprofiles =
  /*#__PURE__*/
  function () {
    function Resource$Userprofiles(context) {
      _classCallCheck(this, Resource$Userprofiles);

      this.context = context;
    }

    _createClass(Resource$Userprofiles, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: [],
          pathParams: [],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userprofiles;
  }();

  dfareporting_v3_4.Resource$Userprofiles = Resource$Userprofiles;

  var Resource$Userrolepermissiongroups =
  /*#__PURE__*/
  function () {
    function Resource$Userrolepermissiongroups(context) {
      _classCallCheck(this, Resource$Userrolepermissiongroups);

      this.context = context;
    }

    _createClass(Resource$Userrolepermissiongroups, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userrolepermissiongroups;
  }();

  dfareporting_v3_4.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;

  var Resource$Userrolepermissions =
  /*#__PURE__*/
  function () {
    function Resource$Userrolepermissions(context) {
      _classCallCheck(this, Resource$Userrolepermissions);

      this.context = context;
    }

    _createClass(Resource$Userrolepermissions, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userrolepermissions;
  }();

  dfareporting_v3_4.Resource$Userrolepermissions = Resource$Userrolepermissions;

  var Resource$Userroles =
  /*#__PURE__*/
  function () {
    function Resource$Userroles(context) {
      _classCallCheck(this, Resource$Userroles);

      this.context = context;
    }

    _createClass(Resource$Userroles, [{
      key: "delete",
      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'DELETE'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "insert",
      value: function insert(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'POST'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "patch",
      value: function patch(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PATCH'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "update",
      value: function update(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/userRoles').replace(/([^:]\/)\/+/g, '$1'),
            method: 'PUT'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Userroles;
  }();

  dfareporting_v3_4.Resource$Userroles = Resource$Userroles;

  var Resource$Videoformats =
  /*#__PURE__*/
  function () {
    function Resource$Videoformats(context) {
      _classCallCheck(this, Resource$Videoformats);

      this.context = context;
    }

    _createClass(Resource$Videoformats, [{
      key: "get",
      value: function get(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId', 'id'],
          pathParams: ['id', 'profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }, {
      key: "list",
      value: function list(paramsOrCallback, optionsOrCallback, callback) {
        var params = paramsOrCallback || {};
        var options = optionsOrCallback || {};

        if (typeof paramsOrCallback === 'function') {
          callback = paramsOrCallback;
          params = {};
          options = {};
        }

        if (typeof optionsOrCallback === 'function') {
          callback = optionsOrCallback;
          options = {};
        }

        var rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';
        var parameters = {
          options: Object.assign({
            url: (rootUrl + '/dfareporting/v3.4/userprofiles/{profileId}/videoFormats').replace(/([^:]\/)\/+/g, '$1'),
            method: 'GET'
          }, options),
          params: params,
          requiredParams: ['profileId'],
          pathParams: ['profileId'],
          context: this.context
        };

        if (callback) {
          googleapis_common_1.createAPIRequest(parameters, callback);
        } else {
          return googleapis_common_1.createAPIRequest(parameters);
        }
      }
    }]);

    return Resource$Videoformats;
  }();

  dfareporting_v3_4.Resource$Videoformats = Resource$Videoformats;
})(dfareporting_v3_4 = exports.dfareporting_v3_4 || (exports.dfareporting_v3_4 = {}));