'use strict';

module.exports = function each(arr, cb, done) {
  if (arr.length === 0) {
    return done();
  }

  var remaining = arr.length;
  var err = null;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var v = _step.value;
      cb(v, function (_err) {
        if (err != null) {
          return;
        }

        if (_err != null) {
          err = _err;
          return done(err);
        }

        if (--remaining <= 0) {
          return done();
        }
      });
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"] != null) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
};